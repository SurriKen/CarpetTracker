import osfrom dataset_process.dataset_processing import DatasetProcessingfrom parameters import ROOT_DIR# Link to video (from repository/content root)folder = os.path.join(ROOT_DIR, 'videos/init')vid_num_range = [55]# times = {#     5: [[4*60+38, 4*60+41], [9*60+36, 10*60+10]],#     8: [[3*60+21, 3*60+24], [10*60, 10*60+3], [10*60+27, 10*60+33]],#     10: [[8*60+13, 8*60+17], [10*60+3, 10*60+5]],#     11: [[2*60+30, 2*60+33], [3*60+3, 3*60+7], [4*60+27, 4*60+29]],#     15: [[4*60+25, 4*60+28]],#     17: [[6*60+33, 6*60+36], [7*60+42, 7*60+44], [8*60+0, 8*60+3]],#     18: [[6*60+25, 6*60+30], [6*60+49, 6*60+56], [8*60+7, 8*60+10], [9*60+35, 9*60+40]],#     22: [[0*60+24, 0*60+28]],#     23: [[0*60+7, 0*60+11], [5*60+17, 5*60+21], [7*60+13, 7*60+18]],#     24: [[0*60+7, 0*60+9]],#     25: [[5*60+4, 5*60+8]],#     27: [[2*60+15, 2*60+20]],#     29: [[6*60+34, 6*60+37]],#     30: [[1*60+55, 2*60]],#     31: [[0*60+5, 0*60+10], [4*60+5, 4*60+10]],#     32: [[4*60+30, 4*60+34]]# }# vid = []# for i in times.keys():#     vid.extend([f'{folder}/test {i}_cam 1_sync.mp4'])    # vid.extend([f'{folder}/test {i}_cam 1.mp4', f'{folder}/test {i}_cam 2.mp4'])    # vid.extend([f'{folder}/test {i}_cam 1_sync.mp4'])# vid = [#     'videos/classification_videos/video/test 37_cam 1.mp4', 'videos/classification_videos/video/test 37_cam 2.mp4',# ]# print(vid)# FOLDER_FOR_FRAMES = 'datasets'FOLDER_FOR_FRAMES = os.path.join('/home/deny/Рабочий стол/1')# from_time - time in video to start cutting, sec (default - 0)# to_time - time in video to end cutting, sec (default - 10000), if to_time > frame count -> to_time = frame countfor i in vid_num_range:    vid = f'{folder}/test {i}_cam 1.mp4'    DatasetProcessing.video2frames(        video_path=vid,        save_path=FOLDER_FOR_FRAMES,        from_time=0,        to_time=120,        size=(640, 360),        step=3    )    vid = f'{folder}/test {i}_cam 2.mp4'    DatasetProcessing.video2frames(        video_path=vid,        save_path=FOLDER_FOR_FRAMES,        from_time=0,        to_time=120,        size=(640, 360),        step=3    )